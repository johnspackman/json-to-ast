{"version":3,"sources":["stringify.js"],"names":["prettyPrint","reprint","astToObject","Writer","buffer","__indent","__indentStr","__currentLine","str","t","undefined","toString","Error","startPos","pos","indexOf","substring","length","comments","forEach","comment","write","source","count","indentStr","i","line","match","m","indent","oldIndent","ast","writer","writeNode","node","type","leadingComments","children","child","index","key","value","trailingComments","rawValue","object","prettyPojo","tokenizer","obj","isArray","elem","first","matchIndent","name","resetIndent","prettyPojoProperty","startTokenIndex","writeTokensUntil","token","tokens","pretty","maxEndToken","endToken","startToken","isPlainObject","childAstLookup","childPropertyLookup","COMMA","isLiteral","isSameLiteral","COMMENT","WHITESPACE","settings","result","push","Array","Object","prototype","call","proto","getPrototypeOf"],"mappings":"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","file":"stringify.js","sourcesContent":["/* ************************************************************************\n\n   Copyright:\n     2017 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n * John Spackman @johnspackman (john.spackman@zenesis.com)\n\n ************************************************************************ */\n\nimport {\n\tcreateObjectKey, \n\tcreateObjectProperty, \n\tcreateArray,\n\tcreateObject,\n\tcreateLiteral\n} from './types';\n\nimport { tokenTypes } from './tokenize';\n\n/**\n * Writer for serialising JSON, automatically indenting as required\n */\nclass Writer {\n\n\tconstructor() {\n\t\tthis.buffer = \"\";\n\t\tthis.__indent = 0;\n\t\tthis.__indentStr = \"\";\n\t\tthis.__currentLine = 0;\n\t}\n\n\t/**\n\t * Writes a string/number.  Multiple lines are rewritten with indentation at the\n\t * start of each line\n\t */\n\twrite(str) {\n\t\tvar t = this;\n\n\t\tif (str === null)\n\t\t\tstr = \"null\";\n\t\telse if (str === undefined)\n\t\t\tstr = \"undefined\";\n\t\telse if (typeof str === \"number\")\n\t\t\tstr = str.toString();\n\t\telse if (typeof str === \"boolean\")\n\t\t\tstr = !!str ? \"true\" : \"false\";\n\t\telse if (typeof str !== \"string\")\n\t\t\tthrow new Error(\"Can only write strings and numbers\");\n\n\t\tvar startPos = 0;\n\t\twhile (true) {\n\t\t\tvar pos = str.indexOf('\\n', startPos);\n\t\t\tif (pos > -1) {\n\t\t\t\tthis.buffer += str.substring(startPos, pos + 1);\n\t\t\t\tthis.__currentLine = this.buffer.length;\n\t\t\t\tthis.buffer += this.__indentStr;\n\t\t\t\tstartPos = pos + 1;\n\t\t\t} else {\n\t\t\t\tthis.buffer += str.substring(startPos);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Outputs comments\n\t */\n\tcomments(comments) {\n\t\tvar t = this;\n\t\tif (comments) {\n\t\t\tcomments.forEach(function(comment) {\n\t\t\t\tt.write(comment.source + \"\\n\");\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Increases or decreases the indentation level (one indent is two spaces)\n\t * \n\t * @param count {Number} number to increase/decrease by\n\t */\n\tindent(count) {\n\t\tif (this.__indent + count < 0)\n\t\t\tthrow new Error(\"Unbalanced indent\");\n\t\tthis.__indent += count;\n\t\t\n\t\tvar indentStr = this.__indentStr;\n\t\tif (count > 0) {\n\t\t\tvar str = \"\";\n\t\t\tfor (var i = 0; i < count; i++)\n\t\t\t\tstr += \"  \";\n\t\t\tindentStr += str;\n\t\t} else {\n\t\t\tindentStr = indentStr.substring(0, indentStr.length + (count * 2));\n\t\t}\n\t\tvar line = this.buffer.substring(this.__currentLine);\n\t\tif (!line.match(/[^\\s]/)) {\n\t\t\tthis.buffer = this.buffer.substring(0, this.__currentLine) + indentStr;\n\t\t}\n\t\tthis.__indentStr = indentStr;\n\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Detects the current indentation level in the output, which has been added manually,\n\t * ie outside of the `indent()` method.  When outputting an AST via `reprint()`, whitespace\n\t * is copied too, this allows the code to adopt whatever indentation level has been\n\t * output by the AST so that injecting `prettyPrint()`-ed new objects are at the same\\\n\t * level.\n\t * \n\t * The old indent is returned, and should be passed to `resetIndent()` to restore the\n\t * previous value.\n\t * \n\t * @return {Object} previous indentation\n\t */\n\tmatchIndent() {\n\t\tvar line = this.buffer.substring(this.__currentLine);\n\t\tvar m = line.match(/^([\\s]*)/);\n\t\tvar indent = m[0];\n\t\tvar oldIndent = this.__indentStr;\n\t\tthis.__indentStr = indent;\n\t\treturn oldIndent;\n\t}\n\t\n\t/**\n\t * Restores the previous indentation settings prior to `matchIndent()`\n\t * \n\t * @param indent {Object} previous indentation settings\n\t */\n\tresetIndent(indent) {\n\t\tthis.__indentStr = indent;\n\t}\n};\n\n/**\n * Pretty prints an AST tree\n */\nexport function prettyPrint(ast) {\n\tvar writer = new Writer();\n\n\t/**\n\t * Writes a node, used recursively\n\t */\n\tfunction writeNode(node) {\n\t\tswitch (node.type) {\n\t\tcase \"object\":\n\t\t\twriter.comments(node.leadingComments);\n\t\t\twriter.write(\"{\\n\").indent(+1);\n\t\t\tnode.children.forEach(function(child, index) {\n\t\t\t\tif (index > 0)\n\t\t\t\t\twriter.write(\",\\n\");\n\t\t\t\twriter.write(\"\\\"\" + child.key.value + \"\\\" : \");\n\t\t\t\twriteNode(child.value);\n\t\t\t});\n\t\t\tif (node.children.length)\n\t\t\t\twriter.write(\"\\n\");\n\t\t\twriter.comments(node.trailingComments);\n\t\t\twriter.indent(-1).write(\"}\");\n\t\t\tbreak;\n\n\t\tcase \"array\":\n\t\t\twriter.comments(node.leadingComments);\n\t\t\twriter.write(\"[\\n\").indent(+1);\n\t\t\tnode.children.forEach(function(child, index) {\n\t\t\t\tif (index > 0)\n\t\t\t\t\twriter.write(\",\\n\");\n\t\t\t\twriteNode(child.value);\n\t\t\t});\n\t\t\tif (node.children.length)\n\t\t\t\twriter.write(\"\\n\");\n\t\t\twriter.comments(node.trailingComments);\n\t\t\twriter.indent(-1).write(\"]\\n\");\n\t\t\tbreak;\n\n\t\tcase \"property\":\n\t\t\twriteNode(node.key);\n\t\t\twriter.write(\" : \");\n\t\t\twriteNode(node.value);\n\t\t\tbreak;\n\n\t\tcase \"identifier\":\n\t\t\twriter.write(\"\\\"\" + node.value + \"\\\"\");\n\t\t\tbreak;\n\n\t\tcase \"literal\":\n\t\t\twriter.comments(node.leadingComments);\n\t\t\twriter.write(node.rawValue);\n\t\t\twriter.comments(node.trailingComments);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error(\"Unexpected node type '\" + node.type + \"'\");\n\t\t}\n\t}\n\n\twriteNode(ast);\n\n\treturn writer.buffer;\n}\n\n/**\n * Prints an object out, using the AST to preserve formatting and whitespace \n * (and include comments) wherever possible.  Any parts of the object which\n * do not have a corresponding AST tree will be pretty printed  \n * \n * This is only really suitable for amendments to the object graph because\n * preserving formatting & comments relies on a 1:1 comparison between the\n * AST and the object.  This means that if you move a subset of an object to \n * another part of the object graph, it will be seen as a deletion of one\n * subset and a brand new subset - you will loose all comments as well as \n * layout. \n * \n * @param object {Object}\n * @param ast {Tokenizer}\n * @return {String}\n */\nexport function reprint(object, ast) {\n\tvar writer = new Writer();\n\t\n\tif (!ast) {\n\t\tprettyPojo(object);\n\t\treturn writer.buffer;\n\t}\n\tvar tokenizer = ast.tokenizer;\n\n\t/*\n\t * Pretty prints any old POJO or native value\n\t */\n\tfunction prettyPojo(obj) {\n\t\tif (typeof obj == \"string\")\n\t\t\twriter.write(\"\\\"\" + obj + \"\\\"\");\n\t\telse if (typeof obj == \"number\")\n\t\t\twriter.write(obj);\n\t\telse if (typeof obj == \"boolean\")\n\t\t\twriter.write(!!obj ? \"true\" : \"false\");\n\t\telse if (isArray(obj)) {\n\t\t\twriter.write(\"[ \");\n\t\t\tobj.forEach(function(elem, index) {\n\t\t\t\tif (index != 0)\n\t\t\t\t\twriter.write(\", \");\n\t\t\t\tprettyPojo(elem);\n\t\t\t});\n\t\t\twriter.write(\" ]\");\n\t\t} else {\n\t\t\tvar first = true;\n\t\t\tvar oldIndent = writer.matchIndent();\n\t\t\twriter.write(\"{\\n\").indent(+1);\n\t\t\tfor (var name in obj) {\n\t\t\t\tif (!first)\n\t\t\t\t\twriter.write(\",\\n\");\n\t\t\t\twriter.write(\"\\\"\" + name + \"\\\": \");\n\t\t\t\tprettyPojo(obj[name]);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\twriter.write(\"\\n\").indent(-1).write(\"}\");\n\t\t\twriter.resetIndent(oldIndent);\n\t\t}\n\t}\n\n\t/*\n\t * Pretty prints a key:value pair\n\t */\n\tfunction prettyPojoProperty(key, value) {\n\t\twriter.write(\"\\\"\" + key + \"\\\": \");\n\t\tprettyPojo(value);\n\t}\n\n\t/*\n\t * Writes tokens which underly the AST, up to a given index\n\t */\n\tvar startTokenIndex = 0;\n\tfunction writeTokensUntil(index) {\n\t\tif (startTokenIndex > -1) {\n\t\t\twhile (startTokenIndex < index) {\n\t\t\t\tvar token = tokenizer.tokens[startTokenIndex];\n\t\t\t\twriter.write(token.rawValue||token.value);\n\t\t\t\tstartTokenIndex++;\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t * Writes an object, comparing it with the AST node.  Used recursively \n\t */\n\tfunction writeNode(object, node) {\n\n\t\t/*\n\t\t * Pretty prints a node to the writer\n\t\t */\n\t\tfunction pretty(node) {\n\t\t\tvar str = prettyPrint(node);\n\t\t\twriter.write(str);\n\t\t\tstartTokenIndex = -1;\n\t\t}\n\n\t\t/*\n\t\t * Calculates the largest endToken\n\t\t * \n\t\t * @param endToken {Number} current largest endToken, or -1 for none\n\t\t * @param node {AST Node}\n\t\t */\n\t\tfunction maxEndToken(endToken, node) {\n\t\t\tvar index;\n\t\t\tif (node.endToken !== undefined)\n\t\t\t\tindex = node.endToken;\n\t\t\telse if (node.startToken !== undefined)\n\t\t\t\tindex = node.startToken;\n\t\t\telse\n\t\t\t\treturn endToken;\n\t\t\tif (endToken > index)\n\t\t\t\treturn endToken;\n\t\t\treturn index;\n\t\t}\n\n\t\t// No startToken?  Then it was not parsed, pretty print it\n\t\tif (node.startToken === undefined)\n\t\t\treturn pretty(node);\n\n\t\tswitch (node.type) {\n\t\tcase \"object\":\n\t\t\t// If it's not the correct type, then pretty print\n\t\t\tif (!isPlainObject(object))\n\t\t\t\treturn prettyPojo(object);\n\n\t\t\t// Create lookups\n\t\t\tvar childAstLookup = {};\n\t\t\tnode.children.forEach(function(child, index) {\n\t\t\t\tchildAstLookup[child.key.value] = child;\n\t\t\t});\n\t\t\tvar childPropertyLookup = {};\n\t\t\tfor (var name in object)\n\t\t\t\tchildPropertyLookup[name] = object[name];\n\n\t\t\t// Opening brace\n\t\t\twriteTokensUntil(node.startToken + 1);\n\n\t\t\t// Output known children first\n\t\t\tvar endToken = -1;\n\t\t\tvar first = true;\n\t\t\tfor (var i = 0; i < node.children.length; i++) {\n\t\t\t\tvar child = node.children[i];\n\t\t\t\tvar key = child.key.value;\n\t\t\t\tvar value = object[key];\n\t\t\t\t\n\t\t\t\t// Deleted a child?\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\twriteTokensUntil(child.key.startToken);\n\t\t\t\t\tstartTokenIndex = child.value.endToken + 1;\n\t\t\t\t\tif (first && i < node.children.length - 1) {\n\t\t\t\t\t\twhile (tokenizer.tokens[startTokenIndex].type != tokenTypes.COMMA)\n\t\t\t\t\t\t\tstartTokenIndex++;\n\t\t\t\t\t\tstartTokenIndex++;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfirst = false;\n\t\t\t\tendToken = maxEndToken(endToken, child.value);\n\t\t\t\t\n\t\t\t\t// Write existing property\n\t\t\t\twriteTokensUntil(child.value.startToken);\n\t\t\t\twriteNode(value, child.value);\n\t\t\t\tdelete childPropertyLookup[key];\n\t\t\t}\n\t\t\t\n\t\t\t// Added properties\n\t\t\tvar first = node.children.length === 0;\n\t\t\tvar oldIndent = writer.matchIndent();\n\t\t\tfor (var name in childPropertyLookup) {\n\t\t\t\tif (!first) {\n\t\t\t\t\twriter.write(\",\\n\");\n\t\t\t\t\tfirst = false;\n\t\t\t\t}\n\t\t\t\tprettyPojoProperty(name, childPropertyLookup[name]);\n\t\t\t}\n\t\t\t\n\t\t\t// Unindent and output the closing brace\n\t\t\twriter.resetIndent(oldIndent);\n\t\t\tif (endToken === -1)\n\t\t\t\tstartTokenIndex = node.endToken;\n\t\t\telse\n\t\t\t\tstartTokenIndex = endToken + 1;\n\t\t\twriteTokensUntil(node.endToken + 1);\n\t\t\tbreak;\n\n\t\tcase \"array\":\n\t\t\tif (!isArray(object))\n\t\t\t\treturn prettyPojo(object);\n\t\t\t\n\t\t\t// Opening brace\n\t\t\twriteTokensUntil(node.startToken + 1);\n\n\t\t\tfor (var i = 0; i < object.length; i++) {\n\t\t\t\tvar child = i < node.children.length ? node.children[i] : undefined;\n\t\t\t\tif (child !== undefined) {\n\t\t\t\t\twriteTokensUntil(child.startToken);\n\t\t\t\t\twriteNode(object[i], child);\n\t\t\t\t\tstartTokenIndex = child.endToken + 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar oldIndent = writer.matchIndent();\n\t\t\t\t\tif (i != 0)\n\t\t\t\t\t\twriter.write(\",\\n\");\n\t\t\t\t\tprettyPojo(object[i]);\n\t\t\t\t\twriter.resetIndent(oldIndent);\n\t\t\t\t\t//startTokenIndex = node.endToken;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Closing brace\n\t\t\twriteTokensUntil(node.endToken + 1);\n\t\t\tbreak;\n\n\t\tcase \"property\":\n\t\t\tbreak;\n\n\t\tcase \"literal\":\n\t\t\t// Check type\n\t\t\tif (!isLiteral(object)) {\n\t\t\t\tprettyPojo(object);\n\t\t\t\tstartTokenIndex = node.endToken + 1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// If it has not changed, then use the AST\n\t\t\tif (isSameLiteral(node, object)) {\n\t\t\t\twriteTokensUntil(node.startToken + 1);\n\t\t\t\n\t\t\t// New value, but try and preserve prefix comment & whitespace\n\t\t\t} else {\n\t\t\t\twriteTokensUntil(node.startToken);\n\t\t\t\tif (typeof object === \"string\")\n\t\t\t\t\twriter.write(\"\\\"\" + object + \"\\\"\");\n\t\t\t\telse\n\t\t\t\t\twriter.write(object);\n\t\t\t\tstartTokenIndex = node.startToken + 1;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error(\"Unexpected node type '\" + node.type + \"'\");\n\t\t}\n\t}\n\n\t// Go\n\twriteNode(object, ast);\n\n\t// Append any whitespace or comments which trail the JSON\n\tif (startTokenIndex > -1) {\n\t\twhile (startTokenIndex < tokenizer.tokens.length) {\n\t\t\tvar token = tokenizer.tokens[startTokenIndex++];\n\t\t\tif (token.type != tokenTypes.COMMENT && token.type != tokenTypes.WHITESPACE)\n\t\t\t\tbreak;\n\t\t\twriter.write(token.rawValue||token.value);\n\t\t}\n\t}\n\n\treturn writer.buffer;\n}\n\n/**\n * Converts an AST into an ordinary POJO \n */\nexport function astToObject(ast, settings) {\n\n\tfunction writeNode(node) {\n\t\tvar result;\n\t\t\n\t\tswitch (node.type) {\n\t\tcase \"object\":\n\t\t\tresult = {}; \n\t\t\tnode.children.forEach(function(child, index) {\n\t\t\t\tresult[child.key.value] = writeNode(child.value);\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase \"array\":\n\t\t\tresult = [];\n\t\t\tnode.children.forEach(function(child, index) {\n\t\t\t\tresult.push(writeNode(child));\n\t\t\t});\n\t\t\tbreak;\n\n\t\tcase \"literal\":\n\t\t\tresult = node.value;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error(\"Unexpected node type '\" + node.type + \"'\");\n\t\t}\n\t\treturn result;\n\t}\n\n\treturn writeNode(ast);\n}\n\n/**\n * Detects whether the value is a native array\n * \n * @param value {Object}\n * @returns boolean\n */\nfunction isArray(value) {\n\treturn (\n\t\t\tvalue !== null && (\n\t\t\t\t\tvalue instanceof Array ||\n\t\t\t\t\tObject.prototype.toString.call(value) === \"[object Array]\")\n\t);\n}\n\n/**\n * Detects whether the value is a native object\n * \n * @param value {Object}\n * @returns boolean\n */\nfunction isPlainObject(obj) {\n\tif (typeof obj === 'object' && obj !== null) {\n\t\tvar proto = Object.getPrototypeOf(obj);\n\t\treturn proto === Object.prototype || proto === null;\n\t}\n\n\treturn false;\n}\n\n/**\n * Detects whether the value is a literal value\n * \n * @param value {Object}\n * @returns boolean\n */\nfunction isLiteral(obj) {\n\tif (obj === null || typeof obj === \"string\" || typeof obj === \"number\" || typeof obj === \"boolean\")\n\t\treturn true;\n\treturn false;\n}\n\nfunction isSameLiteral(node, object) {\n\tif (node.rawValue === null && object === null)\n\t\treturn true;\n\tif ((node.rawValue !== null && object === null) || (node.rawValue === null && object !== null))\n\t\treturn false;\n\tif (typeof node.value !== typeof object)\n\t\treturn false;\n\tif (typeof node.value === \"string\") {\n\t\treturn node.value === object;\n\t}\n\treturn node.rawValue == object;\n}\n"]}